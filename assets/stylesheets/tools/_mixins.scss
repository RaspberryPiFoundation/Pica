@mixin align-element-vertically {
  position:  absolute;
  top:       50%;
  transform: translateY(-50%);
}

@mixin align-element-horizontally {
  position:  absolute;
  left:      50%;
  transform: translateX(-50%);
}

@mixin align-element-center {
  @include align-element-vertically;
  @include align-element-horizontally;
}

@mixin clearfix {
  &::after {
    clear:   both;
    content: '';
    display: table;
  }
}

@mixin font-size($font-size) {
  @include rem('font-size', $font-size);
}

@mixin hidpi-styles {
  @media (-webkit-min-device-pixel-ratio: 1.3),
    (min--moz-device-pixel-ratio: 1.3),
    (-o-min-device-pixel-ratio: 2.6 / 2),
    (min-device-pixel-ratio: 1.3),
    (min-resolution: 1.3dppx) {
    @content;
  }
}

//  http://37signals.com/svn/posts/3271-easy-retina-ready-images-using-scss
@mixin image-2x($image, $width: auto, $height: auto) {
  @include hidpi-styles {
    background-image: url($image);
    background-size:  $width $height;
  }
}

@mixin line-height($font-size: $font-size-base, $line-height: $line-height-base) {
  line-height: ceil($font-size / $line-height) * ($line-height / $font-size);
}

@mixin mq($measurement, $value) {
  @media only screen and ($measurement: $value) {
    @content;
  }
}

//  Includes px value for fallback in browsers with no support for rem units
@mixin rem($property, $value, $important: null) {
  @if ($important != null) {
    $important: !important;
  }
  @else {
    $important: null;
  }

  @if ($value == 0) {
    #{$property}: #{$value} $important;
  }
  @else {
    #{$property}: round($value) + px $important;
    #{$property}: ($value / $font-size-base) * 1rem $important;
  }
}

@mixin respond-to($media) {
  $measurement: 'max-width'   !default;
  $value:       $break-narrow !default;

  @if $media == 'tiny' {
    $measurement: 'max-width';
    $value:       $break-narrow;
  }
  @else if $media == 'narrow' {
    $measurement: 'min-width';
    $value:       $break-narrow;
  }
  @else if $media == 'medium' {
    $measurement: 'min-width';
    $value:       $break-medium;
  }
  @else if $media == 'wide' {
    $measurement: 'min-width';
    $value:       $break-wide;
  }

  @include mq($measurement, $value) {
    @content;
  }
}

@mixin square($size) {
  @include rem('height', $size);
  @include rem('width',  $size);
}
